# -*- coding: utf-8 -*-
"""Deploying_Predictor.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FkDLxbdl009zT-DqQUo3gkTdBefoEBPe
"""

#!pip install fastaudio

!pip install fastai --upgrade

!pip install path

!pip install timm

from fastai.vision.all import *
from fastaudio.core.all import *
from fastaudio.augment.all import *
from fastaudio.ci import skip_if_ci
import timm
import path
from torch.distributions.beta import Beta

class AudioNormalize(Transform):
    "Normalizes a single `AudioTensor`."
    def encodes(self, x:AudioTensor): return (x-x.mean()) / x.std()

def get_x(r): 
  return path/'genres_original'/r['filename'].split('.')[0]/str(r['filename'])

learn1 = load_learner('/content/drive/Othercomputers/My Laptop (1)/Academics/ML Stuff/Genre Predictor/export_r18.pkl')

audio = AudioTensor.create('/content/drive/MyDrive/Genre_Predictor/testingset/Semi-Charmed Life (Instrumental).mp3')
pred,pred_idx,probs = learn1.predict(audio)
sorted, indices = torch.sort(probs, descending = True)
for i in range(0,5):
  #print(learn1.dls.vocab[indices[i]])
  print(f'Prediction: {learn1.dls.vocab[indices[i]]}; Probability: {sorted[i]:.04f}')